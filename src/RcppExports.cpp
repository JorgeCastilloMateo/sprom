// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rtnorm
arma::vec rtnorm(const int N, arma::vec mu, arma::vec sigma);
RcppExport SEXP _sprom_rtnorm(SEXP NSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(rtnorm(N, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// rtnorm1
double rtnorm1(double mu, double sigma, double a, double b);
RcppExport SEXP _sprom_rtnorm1(SEXP muSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(rtnorm1(mu, sigma, a, b));
    return rcpp_result_gen;
END_RCPP
}
// dtnorm1
double dtnorm1(double x, double mu, double sigma, double a, double b);
RcppExport SEXP _sprom_dtnorm1(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(dtnorm1(x, mu, sigma, a, b));
    return rcpp_result_gen;
END_RCPP
}
// rkolmogorov
arma::vec rkolmogorov(const int N);
RcppExport SEXP _sprom_rkolmogorov(SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(rkolmogorov(N));
    return rcpp_result_gen;
END_RCPP
}
// MH
arma::vec MH(const int N, arma::vec old, const arma::vec e);
RcppExport SEXP _sprom_MH(SEXP NSEXP, SEXP oldSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type old(oldSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(MH(N, old, e));
    return rcpp_result_gen;
END_RCPP
}
// glmBer
arma::mat glmBer(const int N, const int k, const int Nl, const int kl, const int Nweak, arma::mat X, const arma::mat X0, const arma::mat X1, arma::vec beta, arma::vec betal1, arma::vec betal2, const arma::uvec weak, const arma::uvec weak1, const arma::uvec weak2, const arma::vec noNA1, const arma::vec noNA2, const arma::uvec Weak1, const arma::uvec Weak2, const arma::uvec indLag1, const arma::uvec indLag2, const arma::uvec indLag12, const arma::uvec indl, const arma::uvec indl1, const arma::uvec indl2, const arma::uvec indSubmodel, const arma::vec prob, arma::vec abLim, const arma::mat V, arma::mat keep, const int nSims, const int nThin, const int nBurnin, const int nReport);
RcppExport SEXP _sprom_glmBer(SEXP NSEXP, SEXP kSEXP, SEXP NlSEXP, SEXP klSEXP, SEXP NweakSEXP, SEXP XSEXP, SEXP X0SEXP, SEXP X1SEXP, SEXP betaSEXP, SEXP betal1SEXP, SEXP betal2SEXP, SEXP weakSEXP, SEXP weak1SEXP, SEXP weak2SEXP, SEXP noNA1SEXP, SEXP noNA2SEXP, SEXP Weak1SEXP, SEXP Weak2SEXP, SEXP indLag1SEXP, SEXP indLag2SEXP, SEXP indLag12SEXP, SEXP indlSEXP, SEXP indl1SEXP, SEXP indl2SEXP, SEXP indSubmodelSEXP, SEXP probSEXP, SEXP abLimSEXP, SEXP VSEXP, SEXP keepSEXP, SEXP nSimsSEXP, SEXP nThinSEXP, SEXP nBurninSEXP, SEXP nReportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type Nl(NlSEXP);
    Rcpp::traits::input_parameter< const int >::type kl(klSEXP);
    Rcpp::traits::input_parameter< const int >::type Nweak(NweakSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betal1(betal1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betal2(betal2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak(weakSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak1(weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak2(weak2SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA1(noNA1SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA2(noNA2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak1(Weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak2(Weak2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag1(indLag1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag2(indLag2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag12(indLag12SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl(indlSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl1(indl1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl2(indl2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indSubmodel(indSubmodelSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type prob(probSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type abLim(abLimSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type keep(keepSEXP);
    Rcpp::traits::input_parameter< const int >::type nSims(nSimsSEXP);
    Rcpp::traits::input_parameter< const int >::type nThin(nThinSEXP);
    Rcpp::traits::input_parameter< const int >::type nBurnin(nBurninSEXP);
    Rcpp::traits::input_parameter< const int >::type nReport(nReportSEXP);
    rcpp_result_gen = Rcpp::wrap(glmBer(N, k, Nl, kl, Nweak, X, X0, X1, beta, betal1, betal2, weak, weak1, weak2, noNA1, noNA2, Weak1, Weak2, indLag1, indLag2, indLag12, indl, indl1, indl2, indSubmodel, prob, abLim, V, keep, nSims, nThin, nBurnin, nReport));
    return rcpp_result_gen;
END_RCPP
}
// predGlmBerKFCV
arma::mat predGlmBerKFCV(const int B, const int Nweak, arma::mat X, const arma::mat X0, const arma::mat X1, arma::mat Xb, const arma::mat beta, const arma::mat betal1, const arma::mat betal2, const arma::uvec weak, const arma::uvec weak1, const arma::uvec weak2, const arma::vec noNA1, const arma::vec noNA2, const arma::uvec Weak1, const arma::uvec Weak2, const arma::uvec indLag1, const arma::uvec indLag2, const arma::uvec indLag12, const arma::uvec indl, const arma::uvec indl1, const arma::uvec indl2, const arma::uvec indSubmodel, const arma::vec prob);
RcppExport SEXP _sprom_predGlmBerKFCV(SEXP BSEXP, SEXP NweakSEXP, SEXP XSEXP, SEXP X0SEXP, SEXP X1SEXP, SEXP XbSEXP, SEXP betaSEXP, SEXP betal1SEXP, SEXP betal2SEXP, SEXP weakSEXP, SEXP weak1SEXP, SEXP weak2SEXP, SEXP noNA1SEXP, SEXP noNA2SEXP, SEXP Weak1SEXP, SEXP Weak2SEXP, SEXP indLag1SEXP, SEXP indLag2SEXP, SEXP indLag12SEXP, SEXP indlSEXP, SEXP indl1SEXP, SEXP indl2SEXP, SEXP indSubmodelSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    Rcpp::traits::input_parameter< const int >::type Nweak(NweakSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xb(XbSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type betal1(betal1SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type betal2(betal2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak(weakSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak1(weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak2(weak2SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA1(noNA1SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA2(noNA2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak1(Weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak2(Weak2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag1(indLag1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag2(indLag2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag12(indLag12SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl(indlSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl1(indl1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl2(indl2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indSubmodel(indSubmodelSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(predGlmBerKFCV(B, Nweak, X, X0, X1, Xb, beta, betal1, betal2, weak, weak1, weak2, noNA1, noNA2, Weak1, Weak2, indLag1, indLag2, indLag12, indl, indl1, indl2, indSubmodel, prob));
    return rcpp_result_gen;
END_RCPP
}
// glmBerGP
arma::mat glmBerGP(const int N, const int k, const arma::mat X, arma::vec beta, const arma::vec abLim, arma::vec alpha, arma::vec hp, arma::mat Rinv, arma::uvec site, int n, const arma::mat V, arma::mat keep, arma::vec psi, arma::vec hpPsi, arma::uvec year, int T, bool randomEffectYear, bool randomEffectDay, const int nSims, const int nThin, const int nBurnin, const int nReport);
RcppExport SEXP _sprom_glmBerGP(SEXP NSEXP, SEXP kSEXP, SEXP XSEXP, SEXP betaSEXP, SEXP abLimSEXP, SEXP alphaSEXP, SEXP hpSEXP, SEXP RinvSEXP, SEXP siteSEXP, SEXP nSEXP, SEXP VSEXP, SEXP keepSEXP, SEXP psiSEXP, SEXP hpPsiSEXP, SEXP yearSEXP, SEXP TSEXP, SEXP randomEffectYearSEXP, SEXP randomEffectDaySEXP, SEXP nSimsSEXP, SEXP nThinSEXP, SEXP nBurninSEXP, SEXP nReportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type abLim(abLimSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hp(hpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Rinv(RinvSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type site(siteSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type keep(keepSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hpPsi(hpPsiSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type year(yearSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< bool >::type randomEffectYear(randomEffectYearSEXP);
    Rcpp::traits::input_parameter< bool >::type randomEffectDay(randomEffectDaySEXP);
    Rcpp::traits::input_parameter< const int >::type nSims(nSimsSEXP);
    Rcpp::traits::input_parameter< const int >::type nThin(nThinSEXP);
    Rcpp::traits::input_parameter< const int >::type nBurnin(nBurninSEXP);
    Rcpp::traits::input_parameter< const int >::type nReport(nReportSEXP);
    rcpp_result_gen = Rcpp::wrap(glmBerGP(N, k, X, beta, abLim, alpha, hp, Rinv, site, n, V, keep, psi, hpPsi, year, T, randomEffectYear, randomEffectDay, nSims, nThin, nBurnin, nReport));
    return rcpp_result_gen;
END_RCPP
}
// glmBerGPtl
arma::mat glmBerGPtl(const int N, const int k, const int Nl, const int kl, const int Nweak, arma::mat X, const arma::mat X0, const arma::mat X1, arma::vec beta, arma::vec betal1, arma::vec betal2, arma::vec hpl1, arma::vec hpl2, arma::vec Ws, arma::vec hp0, arma::mat dist, bool decayPrior, int n, arma::vec wtl, int T, int L, arma::uvec site, arma::uvec time, const arma::uvec weak, const arma::uvec weak1, const arma::uvec weak2, const arma::vec noNA1, const arma::vec noNA2, const arma::uvec Weak1, const arma::uvec Weak2, const arma::uvec indLag1, const arma::uvec indLag2, const arma::uvec indLag12, const arma::uvec indl, const arma::uvec indl1, const arma::uvec indl2, const arma::uvec indSubmodel, const arma::vec prob, arma::vec abLim, const arma::mat V, const double nb, const double ga, const double gb, const double da, const double db, arma::mat keep, const int nSims, const int nThin, const int nBurnin, const int nReport);
RcppExport SEXP _sprom_glmBerGPtl(SEXP NSEXP, SEXP kSEXP, SEXP NlSEXP, SEXP klSEXP, SEXP NweakSEXP, SEXP XSEXP, SEXP X0SEXP, SEXP X1SEXP, SEXP betaSEXP, SEXP betal1SEXP, SEXP betal2SEXP, SEXP hpl1SEXP, SEXP hpl2SEXP, SEXP WsSEXP, SEXP hp0SEXP, SEXP distSEXP, SEXP decayPriorSEXP, SEXP nSEXP, SEXP wtlSEXP, SEXP TSEXP, SEXP LSEXP, SEXP siteSEXP, SEXP timeSEXP, SEXP weakSEXP, SEXP weak1SEXP, SEXP weak2SEXP, SEXP noNA1SEXP, SEXP noNA2SEXP, SEXP Weak1SEXP, SEXP Weak2SEXP, SEXP indLag1SEXP, SEXP indLag2SEXP, SEXP indLag12SEXP, SEXP indlSEXP, SEXP indl1SEXP, SEXP indl2SEXP, SEXP indSubmodelSEXP, SEXP probSEXP, SEXP abLimSEXP, SEXP VSEXP, SEXP nbSEXP, SEXP gaSEXP, SEXP gbSEXP, SEXP daSEXP, SEXP dbSEXP, SEXP keepSEXP, SEXP nSimsSEXP, SEXP nThinSEXP, SEXP nBurninSEXP, SEXP nReportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type Nl(NlSEXP);
    Rcpp::traits::input_parameter< const int >::type kl(klSEXP);
    Rcpp::traits::input_parameter< const int >::type Nweak(NweakSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betal1(betal1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betal2(betal2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hpl1(hpl1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hpl2(hpl2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ws(WsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hp0(hp0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type dist(distSEXP);
    Rcpp::traits::input_parameter< bool >::type decayPrior(decayPriorSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type wtl(wtlSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type site(siteSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak(weakSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak1(weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak2(weak2SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA1(noNA1SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA2(noNA2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak1(Weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak2(Weak2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag1(indLag1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag2(indLag2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag12(indLag12SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl(indlSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl1(indl1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl2(indl2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indSubmodel(indSubmodelSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type prob(probSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type abLim(abLimSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< const double >::type nb(nbSEXP);
    Rcpp::traits::input_parameter< const double >::type ga(gaSEXP);
    Rcpp::traits::input_parameter< const double >::type gb(gbSEXP);
    Rcpp::traits::input_parameter< const double >::type da(daSEXP);
    Rcpp::traits::input_parameter< const double >::type db(dbSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type keep(keepSEXP);
    Rcpp::traits::input_parameter< const int >::type nSims(nSimsSEXP);
    Rcpp::traits::input_parameter< const int >::type nThin(nThinSEXP);
    Rcpp::traits::input_parameter< const int >::type nBurnin(nBurninSEXP);
    Rcpp::traits::input_parameter< const int >::type nReport(nReportSEXP);
    rcpp_result_gen = Rcpp::wrap(glmBerGPtl(N, k, Nl, kl, Nweak, X, X0, X1, beta, betal1, betal2, hpl1, hpl2, Ws, hp0, dist, decayPrior, n, wtl, T, L, site, time, weak, weak1, weak2, noNA1, noNA2, Weak1, Weak2, indLag1, indLag2, indLag12, indl, indl1, indl2, indSubmodel, prob, abLim, V, nb, ga, gb, da, db, keep, nSims, nThin, nBurnin, nReport));
    return rcpp_result_gen;
END_RCPP
}
// predGlmBerGPtl
arma::mat predGlmBerGPtl(const int B, const int Nweak, const int n, const int newn, const int T, const int L, arma::mat X, const arma::mat X0, const arma::mat X1, arma::uvec newsite, arma::mat dist, arma::mat Xb, arma::mat Ws0, const arma::mat beta, const arma::mat betal1, const arma::mat betal2, const arma::mat Ws, const arma::mat hp, const arma::uvec weak, const arma::uvec weak1, const arma::uvec weak2, const arma::vec noNA1, const arma::vec noNA2, const arma::uvec Weak1, const arma::uvec Weak2, const arma::uvec indLag1, const arma::uvec indLag2, const arma::uvec indLag12, const arma::uvec indl, const arma::uvec indl1, const arma::uvec indl2, const arma::uvec indSubmodel, const arma::vec prob);
RcppExport SEXP _sprom_predGlmBerGPtl(SEXP BSEXP, SEXP NweakSEXP, SEXP nSEXP, SEXP newnSEXP, SEXP TSEXP, SEXP LSEXP, SEXP XSEXP, SEXP X0SEXP, SEXP X1SEXP, SEXP newsiteSEXP, SEXP distSEXP, SEXP XbSEXP, SEXP Ws0SEXP, SEXP betaSEXP, SEXP betal1SEXP, SEXP betal2SEXP, SEXP WsSEXP, SEXP hpSEXP, SEXP weakSEXP, SEXP weak1SEXP, SEXP weak2SEXP, SEXP noNA1SEXP, SEXP noNA2SEXP, SEXP Weak1SEXP, SEXP Weak2SEXP, SEXP indLag1SEXP, SEXP indLag2SEXP, SEXP indLag12SEXP, SEXP indlSEXP, SEXP indl1SEXP, SEXP indl2SEXP, SEXP indSubmodelSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    Rcpp::traits::input_parameter< const int >::type Nweak(NweakSEXP);
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int >::type newn(newnSEXP);
    Rcpp::traits::input_parameter< const int >::type T(TSEXP);
    Rcpp::traits::input_parameter< const int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type newsite(newsiteSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type dist(distSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xb(XbSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ws0(Ws0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type betal1(betal1SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type betal2(betal2SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Ws(WsSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type hp(hpSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak(weakSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak1(weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak2(weak2SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA1(noNA1SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA2(noNA2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak1(Weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak2(Weak2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag1(indLag1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag2(indLag2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag12(indLag12SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl(indlSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl1(indl1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl2(indl2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indSubmodel(indSubmodelSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(predGlmBerGPtl(B, Nweak, n, newn, T, L, X, X0, X1, newsite, dist, Xb, Ws0, beta, betal1, betal2, Ws, hp, weak, weak1, weak2, noNA1, noNA2, Weak1, Weak2, indLag1, indLag2, indLag12, indl, indl1, indl2, indSubmodel, prob));
    return rcpp_result_gen;
END_RCPP
}
// glmBerModelPaper
arma::mat glmBerModelPaper(const int N, const int k, const int Nl, const int kl, const int Nweak, arma::mat X, const arma::mat X0, const arma::mat X1, arma::vec beta, arma::vec betal1, arma::vec betal2, arma::vec hpl1, arma::vec hpl2, arma::vec Wtls, arma::vec hp0, arma::mat dist, bool decayPrior, int n, arma::vec wtl, int T, int L, arma::uvec site, arma::uvec year, arma::uvec day, const arma::uvec weak, const arma::uvec weak1, const arma::uvec weak2, const arma::vec noNA1, const arma::vec noNA2, const arma::uvec Weak1, const arma::uvec Weak2, const arma::uvec indLag1, const arma::uvec indLag2, const arma::uvec indLag12, const arma::uvec indl, const arma::uvec indl1, const arma::uvec indl2, const arma::uvec indSubmodel, const arma::vec prob, arma::vec abLim, const arma::mat V, const double nb, const double ga, const double gb, const double da, const double db, arma::mat keep, const int nSims, const int nThin, const int nBurnin, const int nReport);
RcppExport SEXP _sprom_glmBerModelPaper(SEXP NSEXP, SEXP kSEXP, SEXP NlSEXP, SEXP klSEXP, SEXP NweakSEXP, SEXP XSEXP, SEXP X0SEXP, SEXP X1SEXP, SEXP betaSEXP, SEXP betal1SEXP, SEXP betal2SEXP, SEXP hpl1SEXP, SEXP hpl2SEXP, SEXP WtlsSEXP, SEXP hp0SEXP, SEXP distSEXP, SEXP decayPriorSEXP, SEXP nSEXP, SEXP wtlSEXP, SEXP TSEXP, SEXP LSEXP, SEXP siteSEXP, SEXP yearSEXP, SEXP daySEXP, SEXP weakSEXP, SEXP weak1SEXP, SEXP weak2SEXP, SEXP noNA1SEXP, SEXP noNA2SEXP, SEXP Weak1SEXP, SEXP Weak2SEXP, SEXP indLag1SEXP, SEXP indLag2SEXP, SEXP indLag12SEXP, SEXP indlSEXP, SEXP indl1SEXP, SEXP indl2SEXP, SEXP indSubmodelSEXP, SEXP probSEXP, SEXP abLimSEXP, SEXP VSEXP, SEXP nbSEXP, SEXP gaSEXP, SEXP gbSEXP, SEXP daSEXP, SEXP dbSEXP, SEXP keepSEXP, SEXP nSimsSEXP, SEXP nThinSEXP, SEXP nBurninSEXP, SEXP nReportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type Nl(NlSEXP);
    Rcpp::traits::input_parameter< const int >::type kl(klSEXP);
    Rcpp::traits::input_parameter< const int >::type Nweak(NweakSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betal1(betal1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betal2(betal2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hpl1(hpl1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hpl2(hpl2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Wtls(WtlsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hp0(hp0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type dist(distSEXP);
    Rcpp::traits::input_parameter< bool >::type decayPrior(decayPriorSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type wtl(wtlSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type site(siteSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type year(yearSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type day(daySEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak(weakSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak1(weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak2(weak2SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA1(noNA1SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA2(noNA2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak1(Weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak2(Weak2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag1(indLag1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag2(indLag2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag12(indLag12SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl(indlSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl1(indl1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl2(indl2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indSubmodel(indSubmodelSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type prob(probSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type abLim(abLimSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< const double >::type nb(nbSEXP);
    Rcpp::traits::input_parameter< const double >::type ga(gaSEXP);
    Rcpp::traits::input_parameter< const double >::type gb(gbSEXP);
    Rcpp::traits::input_parameter< const double >::type da(daSEXP);
    Rcpp::traits::input_parameter< const double >::type db(dbSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type keep(keepSEXP);
    Rcpp::traits::input_parameter< const int >::type nSims(nSimsSEXP);
    Rcpp::traits::input_parameter< const int >::type nThin(nThinSEXP);
    Rcpp::traits::input_parameter< const int >::type nBurnin(nBurninSEXP);
    Rcpp::traits::input_parameter< const int >::type nReport(nReportSEXP);
    rcpp_result_gen = Rcpp::wrap(glmBerModelPaper(N, k, Nl, kl, Nweak, X, X0, X1, beta, betal1, betal2, hpl1, hpl2, Wtls, hp0, dist, decayPrior, n, wtl, T, L, site, year, day, weak, weak1, weak2, noNA1, noNA2, Weak1, Weak2, indLag1, indLag2, indLag12, indl, indl1, indl2, indSubmodel, prob, abLim, V, nb, ga, gb, da, db, keep, nSims, nThin, nBurnin, nReport));
    return rcpp_result_gen;
END_RCPP
}
// predGlmBerModelPaperKFCV
arma::mat predGlmBerModelPaperKFCV(const int B, const int Nweak, const int n, const int newn, const int T, const int L, arma::mat X, const arma::mat X0, const arma::mat X1, arma::vec year, arma::vec day, arma::vec newyear, arma::vec newday, arma::mat dist, arma::mat Xb, arma::mat Wtls0, const arma::mat beta, const arma::mat betal1, const arma::mat betal2, const arma::mat Wtls, const arma::mat wtl, const arma::mat hp, const arma::uvec weak, const arma::uvec weak1, const arma::uvec weak2, const arma::vec noNA1, const arma::vec noNA2, const arma::uvec Weak1, const arma::uvec Weak2, const arma::uvec indLag1, const arma::uvec indLag2, const arma::uvec indLag12, const arma::uvec indl, const arma::uvec indl1, const arma::uvec indl2, const arma::uvec indSubmodel, const arma::vec prob);
RcppExport SEXP _sprom_predGlmBerModelPaperKFCV(SEXP BSEXP, SEXP NweakSEXP, SEXP nSEXP, SEXP newnSEXP, SEXP TSEXP, SEXP LSEXP, SEXP XSEXP, SEXP X0SEXP, SEXP X1SEXP, SEXP yearSEXP, SEXP daySEXP, SEXP newyearSEXP, SEXP newdaySEXP, SEXP distSEXP, SEXP XbSEXP, SEXP Wtls0SEXP, SEXP betaSEXP, SEXP betal1SEXP, SEXP betal2SEXP, SEXP WtlsSEXP, SEXP wtlSEXP, SEXP hpSEXP, SEXP weakSEXP, SEXP weak1SEXP, SEXP weak2SEXP, SEXP noNA1SEXP, SEXP noNA2SEXP, SEXP Weak1SEXP, SEXP Weak2SEXP, SEXP indLag1SEXP, SEXP indLag2SEXP, SEXP indLag12SEXP, SEXP indlSEXP, SEXP indl1SEXP, SEXP indl2SEXP, SEXP indSubmodelSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    Rcpp::traits::input_parameter< const int >::type Nweak(NweakSEXP);
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int >::type newn(newnSEXP);
    Rcpp::traits::input_parameter< const int >::type T(TSEXP);
    Rcpp::traits::input_parameter< const int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type year(yearSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type day(daySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type newyear(newyearSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type newday(newdaySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type dist(distSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xb(XbSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Wtls0(Wtls0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type betal1(betal1SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type betal2(betal2SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Wtls(WtlsSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type wtl(wtlSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type hp(hpSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak(weakSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak1(weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type weak2(weak2SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA1(noNA1SEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type noNA2(noNA2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak1(Weak1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type Weak2(Weak2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag1(indLag1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag2(indLag2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indLag12(indLag12SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl(indlSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl1(indl1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indl2(indl2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type indSubmodel(indSubmodelSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(predGlmBerModelPaperKFCV(B, Nweak, n, newn, T, L, X, X0, X1, year, day, newyear, newday, dist, Xb, Wtls0, beta, betal1, betal2, Wtls, wtl, hp, weak, weak1, weak2, noNA1, noNA2, Weak1, Weak2, indLag1, indLag2, indLag12, indl, indl1, indl2, indSubmodel, prob));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sprom_rtnorm", (DL_FUNC) &_sprom_rtnorm, 3},
    {"_sprom_rtnorm1", (DL_FUNC) &_sprom_rtnorm1, 4},
    {"_sprom_dtnorm1", (DL_FUNC) &_sprom_dtnorm1, 5},
    {"_sprom_rkolmogorov", (DL_FUNC) &_sprom_rkolmogorov, 1},
    {"_sprom_MH", (DL_FUNC) &_sprom_MH, 3},
    {"_sprom_glmBer", (DL_FUNC) &_sprom_glmBer, 33},
    {"_sprom_predGlmBerKFCV", (DL_FUNC) &_sprom_predGlmBerKFCV, 24},
    {"_sprom_glmBerGP", (DL_FUNC) &_sprom_glmBerGP, 22},
    {"_sprom_glmBerGPtl", (DL_FUNC) &_sprom_glmBerGPtl, 50},
    {"_sprom_predGlmBerGPtl", (DL_FUNC) &_sprom_predGlmBerGPtl, 33},
    {"_sprom_glmBerModelPaper", (DL_FUNC) &_sprom_glmBerModelPaper, 51},
    {"_sprom_predGlmBerModelPaperKFCV", (DL_FUNC) &_sprom_predGlmBerModelPaperKFCV, 37},
    {NULL, NULL, 0}
};

RcppExport void R_init_sprom(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
